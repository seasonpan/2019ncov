{"version":3,"sources":["statics/bg.jpg","style.js","pages/home/store/reducer.js","pages/home/store/actionCreators.js","pages/home/store/actionTypes.js","store/reducer.js","store/index.js","pages/home/style.js","pages/home/components/Header.js","pages/home/components/Nav.js","pages/home/components/Map.js","pages/home/components/News.js","pages/home/components/Rumor.js","pages/home/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","GlobalStyle","createGlobalStyle","defaultState","fromJS","list","active","changeNavActive","value","type","reducer","combineReducers","home","state","action","set","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","HeaderWrapper","styled","div","headerPic","NavWrapper","InfoTop","InfoBox","InfoTab","Header","className","Component","Nav","this","props","handleItemClick","map","item","index","onClick","key","connect","getIn","toJS","dispatch","actionCreators","Map","News","Rumor","Home","App","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,gC,y6CCEpC,IAAMC,EAAcC,YAAH,K,gCCClBC,EAAeC,iBAAO,CAC1BC,KAAM,CAAC,2BAAQ,2BAAQ,2BAAQ,gBAC/BC,OAAQ,ICHGC,EAAkB,SAACC,GAAD,MAAY,CACzCC,KCH+B,wBDI/BD,UEGaE,EAJCC,0BAAgB,CAC9BC,KHIa,WAAmC,IAAlCC,EAAiC,uDAAzBV,EAAcW,EAAW,uCAC/C,OAAQA,EAAOL,MACb,IEV6B,wBFW3B,OAAOI,EAAME,IAAI,SAAUD,EAAON,OACpC,QACE,OAAOK,M,QITPG,EACc,kBAAXC,QACPA,OAAOC,qCACLD,OAAOC,qCAAqC,IAEvCC,IAMMC,EAJDC,YAAYX,EAASM,EACjCM,YAAgBC,O,2oDCTX,IAAMC,EAAgBC,IAAOC,IAAV,IAGNC,KAsBPC,EAAaH,IAAOC,IAAV,KA6BVG,EAAUJ,IAAOC,IAAV,KAMPI,EAAUL,IAAOC,IAAV,KAKPK,EAAUN,IAAOC,IAAV,KCpDLM,E,iLAXX,OACE,kBAACR,EAAD,KACE,yBAAKS,UAAU,QACb,yBAAKA,UAAU,aAAf,oDACA,yBAAKA,UAAU,SAAf,8C,GANWC,aCEfC,E,iLACM,IAAD,EACmCC,KAAKC,MAAvChC,EADD,EACCA,KAAMC,EADP,EACOA,OAAQgC,EADf,EACeA,gBACtB,OACE,kBAACV,EAAD,KAEIvB,EAAKkC,KAAI,SAACC,EAAMC,GAAP,OACP,yBACEC,QAAS,kBAAMJ,EAAgBG,IAC/BR,UAAWQ,IAAUnC,EAAS,kBAAoB,WAClDqC,IAAKF,GACJD,W,GAXGN,aA+BHU,eAXS,SAAC/B,GAAD,MAAY,CAClCR,KAAMQ,EAAMgC,MAAM,CAAC,OAAQ,SAASC,OACpCxC,OAAQO,EAAMgC,MAAM,CAAC,OAAQ,eAGJ,SAACE,GAAD,MAAe,CACxCT,gBADwC,SACxBG,GACdM,EAASC,EAAezC,gBAAgBkC,QAI7BG,CAA6CT,GCZ7Cc,E,iLAfX,OACE,kBAAC,WAAD,KACE,kBAACpB,EAAD,6CAGA,kBAACE,EAAD,iCACA,kBAACD,EAAD,0B,GARUI,aCYHgB,E,iLAXX,OACE,kBAAC,WAAD,KACE,kBAACnB,EAAD,iCACA,kBAACD,EAAD,kD,GALWI,aCcJiB,E,iLAZX,OACE,kBAAC,WAAD,KACE,kBAACpB,EAAD,iCACA,kBAACD,EAAD,kD,GALYI,aCGdkB,E,iLAEF,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GARWlB,aAcJU,cAAQ,KAAM,KAAdA,CAAoBQ,GCApBC,MAff,WACE,OACE,yBAAKpB,UAAU,OACb,kBAAC,IAAD,CAAUb,MAAOA,GACf,kBAAC,IAAD,KACE,kBAACnB,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqD,KAAK,IAAIC,UAAWH,SCHnBI,QACW,cAA7BvC,OAAOwC,SAASC,UAEe,UAA7BzC,OAAOwC,SAASC,UAEhBzC,OAAOwC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD8H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.5af9b9f1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.1dc15fdd.jpg\";","import { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed, \n  figure, figcaption, footer, header, hgroup, \n  menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure, \n  footer, header, hgroup, menu, nav, section {\n    display: block;\n  }\n  body {\n    line-height: 1;\n    background: #f7f7f7;\n  }\n  ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n\n`","import {fromJS} from 'immutable'\r\nimport * as actionTypes from './actionTypes'\r\n\r\nconst defaultState = fromJS({\r\n  list: ['疫情地图', '实时播报', '辟谣信息', '关于'],\r\n  active: 0\r\n})\r\n\r\nexport default (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.CHANGE_NAV_ACTIVE:\r\n      return state.set('active', action.value)\r\n    default:\r\n      return state\r\n  }\r\n}","import * as actionTypes from './actionTypes'\r\n\r\nexport const changeNavActive = (value) => ({\r\n  type: actionTypes.CHANGE_NAV_ACTIVE,\r\n  value\r\n})","export const CHANGE_NAV_ACTIVE = 'nav/change_nav_active'","import {combineReducers} from 'redux-immutable'\r\nimport {reducer as homeReducer} from '../pages/home/store'\r\n\r\nconst reducer = combineReducers({\r\n  home: homeReducer\r\n})\r\n\r\nexport default reducer\r\n\r\n","import { createStore, compose, applyMiddleware } from 'redux'\r\nimport reducer from './reducer'\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n    }) : compose;\r\n\r\nconst store = createStore(reducer, composeEnhancers(\r\n  applyMiddleware(thunk)\r\n))\r\n\r\nexport default store","import styled from 'styled-components'\r\nimport headerPic from '../../statics/bg.jpg'\r\n\r\nexport const HeaderWrapper = styled.div`\r\n  height: 160px;\r\n  width: 100vw;\r\n  background: url(${headerPic});\r\n  background-size: cover;\r\n  .mask{\r\n    padding: 40px;\r\n    width:100%;\r\n    height: 100%;\r\n    background: rgba(0,0,0,0.5);\r\n  }\r\n  .sub-title{\r\n    font-size: 28px;\r\n    font-weight:bold;\r\n    color: #fff;\r\n  }\r\n  .title{\r\n    margin-top: 10px;\r\n    font-size: 42px;\r\n    font-weight:bold;\r\n    letter-spacing: 2px;\r\n    color: #fff;\r\n  }\r\n`\r\n\r\nexport const NavWrapper = styled.div`\r\n  display: flex;\r\n  height: 50px;\r\n  line-height: 50px;\r\n  background: #fff;\r\n  border-bottom: 1px solid #eee;\r\n  .nav-item{\r\n    font-size: 1rem;\r\n    flex: 1 1;\r\n    text-align: center;\r\n    cursor: pointer;\r\n    &.active{\r\n      position: relative;\r\n      color: #369bca;\r\n      &::before{\r\n        content: '';\r\n        display: block;\r\n        position: absolute;\r\n        bottom: 0;\r\n        left: 50%;\r\n        height: 4px;\r\n        width: 50px;\r\n        transform: translate(-50%, 0);\r\n        background: #369bca;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const InfoTop = styled.div`\r\n  margin-top: 10px;\r\n  padding: 5px 10px;\r\n  background: #fff;\r\n`\r\n\r\nexport const InfoBox = styled.div`\r\n  padding: 5px 10px;\r\n  background: #fff;\r\n`\r\n\r\nexport const InfoTab = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  height: 30px;\r\n  line-height: 30px;\r\n  margin-top: 10px;\r\n  padding: 0 10px;\r\n  border-bottom: .1px solid #ebebeb;\r\n  background: #fff;\r\n`","import React, { Component } from 'react'\r\nimport {HeaderWrapper} from '../style'\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <HeaderWrapper>\r\n        <div className=\"mask\">\r\n          <div className=\"sub-title\">新型冠状病毒肺炎</div>\r\n          <div className=\"title\">疫情实时动态</div>\r\n        </div>\r\n      </HeaderWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { NavWrapper } from '../style'\r\nimport { actionCreators } from '../store'\r\n\r\nclass Nav extends Component {\r\n  render() {\r\n    const { list, active, handleItemClick } = this.props\r\n    return (\r\n      <NavWrapper>\r\n        {\r\n          list.map((item, index) => (\r\n            <div\r\n              onClick={() => handleItemClick(index)}\r\n              className={index === active ? 'nav-item active' : 'nav-item'}\r\n              key={index}>\r\n              {item}\r\n            </div>\r\n          ))\r\n        }\r\n      </NavWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  list: state.getIn(['home', 'list']).toJS(),\r\n  active: state.getIn(['home', 'active']),\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handleItemClick(index) {\r\n    dispatch(actionCreators.changeNavActive(index))\r\n  }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);","import React, { Component, Fragment } from 'react'\r\nimport {\r\n  InfoTop,\r\n  InfoBox,\r\n  InfoTab\r\n} from '../style'\r\n\r\nclass Map extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <InfoTop>\r\n          全国统计数据\r\n        </InfoTop>\r\n        <InfoTab>疫情地图</InfoTab>\r\n        <InfoBox>\r\n          地图\r\n        </InfoBox>\r\n      </Fragment>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default Map","import React, { Component, Fragment } from 'react'\r\nimport {\r\n  InfoBox,\r\n  InfoTab\r\n} from '../style'\r\n\r\nclass News extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <InfoTab>实时新闻</InfoTab>\r\n        <InfoBox>\r\n          实时新闻内容\r\n        </InfoBox>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default News","import React, { Component, Fragment } from 'react'\r\nimport {\r\n  InfoBox,\r\n  InfoTab\r\n} from '../style'\r\n\r\nclass Rumor extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <InfoTab>辟谣信息</InfoTab>\r\n        <InfoBox>\r\n          辟谣信息内容\r\n        </InfoBox>\r\n      </Fragment>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default Rumor","import React, {Component, Fragment} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport Header from './components/Header'\r\nimport Nav from './components/Nav'\r\nimport Map from './components/Map'\r\nimport News from './components/News'\r\nimport Rumor from './components/Rumor'\r\n\r\n\r\nclass Home extends Component{\r\n  render(){\r\n    return (\r\n      <Fragment>\r\n        <Header/>\r\n        <Nav/>\r\n        <Map/>\r\n        <News/>\r\n        <Rumor/>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, null)(Home)","import React from 'react';\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport { GlobalStyle } from './style'\r\nimport 'antd/dist/antd.css'\r\nimport store from './store';\r\nimport Home from './pages/home'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <Router>\r\n          <GlobalStyle />\r\n          <Switch>\r\n            <Route path=\"/\" component={Home}></Route>\r\n          </Switch>\r\n        </Router>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}